// style-value-types@5.1.2 downloaded from https://ga.jspm.io/npm:style-value-types@5.1.2/dist/es/index.mjs

const clamp=(t,s)=>e=>Math.max(Math.min(e,s),t);const sanitize=t=>t%1?Number(t.toFixed(5)):t;const t=/(-)?([\d]*\.?[\d])+/g;const s=/(#[0-9a-f]{6}|#[0-9a-f]{3}|#(?:[0-9a-f]{2}){2,4}|(rgb|hsl)a?\((-?[\d\.]+%?[,\s]+){2}(-?[\d\.]+%?)\s*[\,\/]?\s*[\d\.]*%?\))/gi;const e=/^(#[0-9a-f]{3}|#(?:[0-9a-f]{2}){2,4}|(rgb|hsl)a?\((-?[\d\.]+%?[,\s]+){2}(-?[\d\.]+%?)\s*[\,\/]?\s*[\d\.]*%?\))$/i;function isString(t){return"string"===typeof t}const r={test:t=>"number"===typeof t,parse:parseFloat,transform:t=>t};const n=Object.assign(Object.assign({},r),{transform:clamp(0,1)});const a=Object.assign(Object.assign({},r),{default:1});const createUnitType=t=>({test:s=>isString(s)&&s.endsWith(t)&&1===s.split(" ").length,parse:parseFloat,transform:s=>`${s}${t}`});const o=createUnitType("deg");const c=createUnitType("%");const l=createUnitType("px");const i=createUnitType("vh");const p=createUnitType("vw");const u=Object.assign(Object.assign({},c),{parse:t=>c.parse(t)/100,transform:t=>c.transform(100*t)});const isColorString=(t,s)=>r=>Boolean(isString(r)&&e.test(r)&&r.startsWith(t)||s&&Object.prototype.hasOwnProperty.call(r,s));const splitColor=(s,e,r)=>n=>{if(!isString(n))return n;const[a,o,c,l]=n.match(t);return{[s]:parseFloat(a),[e]:parseFloat(o),[r]:parseFloat(c),alpha:void 0!==l?parseFloat(l):1}};const f={test:isColorString("hsl","hue"),parse:splitColor("hue","saturation","lightness"),transform:({hue:t,saturation:s,lightness:e,alpha:r=1})=>"hsla("+Math.round(t)+", "+c.transform(sanitize(s))+", "+c.transform(sanitize(e))+", "+sanitize(n.transform(r))+")"};const m=clamp(0,255);const g=Object.assign(Object.assign({},r),{transform:t=>Math.round(m(t))});const h={test:isColorString("rgb","red"),parse:splitColor("red","green","blue"),transform:({red:t,green:s,blue:e,alpha:r=1})=>"rgba("+g.transform(t)+", "+g.transform(s)+", "+g.transform(e)+", "+sanitize(n.transform(r))+")"};function parseHex(t){let s="";let e="";let r="";let n="";if(t.length>5){s=t.substr(1,2);e=t.substr(3,2);r=t.substr(5,2);n=t.substr(7,2)}else{s=t.substr(1,1);e=t.substr(2,1);r=t.substr(3,1);n=t.substr(4,1);s+=s;e+=e;r+=r;n+=n}return{red:parseInt(s,16),green:parseInt(e,16),blue:parseInt(r,16),alpha:n?parseInt(n,16)/255:1}}const b={test:isColorString("#"),parse:parseHex,transform:h.transform};const d={test:t=>h.test(t)||b.test(t)||f.test(t),parse:t=>h.test(t)?h.parse(t):f.test(t)?f.parse(t):b.parse(t),transform:t=>isString(t)?t:t.hasOwnProperty("red")?h.transform(t):f.transform(t)};const v="${c}";const y="${n}";function test(e){var r,n,a,o;return isNaN(e)&&isString(e)&&(null!==(n=null===(r=e.match(t))||void 0===r?void 0:r.length)&&void 0!==n?n:0)+(null!==(o=null===(a=e.match(s))||void 0===a?void 0:a.length)&&void 0!==o?o:0)>0}function analyse(e){"number"===typeof e&&(e=`${e}`);const n=[];let a=0;const o=e.match(s);if(o){a=o.length;e=e.replace(s,v);n.push(...o.map(d.parse))}const c=e.match(t);if(c){e=e.replace(t,y);n.push(...c.map(r.parse))}return{values:n,numColors:a,tokenised:e}}function parse(t){return analyse(t).values}function createTransformer(t){const{values:s,numColors:e,tokenised:r}=analyse(t);const n=s.length;return t=>{let s=r;for(let r=0;r<n;r++)s=s.replace(r<e?v:y,r<e?d.transform(t[r]):sanitize(t[r]));return s}}const convertNumbersToZero=t=>"number"===typeof t?0:t;function getAnimatableNone(t){const s=parse(t);const e=createTransformer(t);return e(s.map(convertNumbersToZero))}const O={test:test,parse:parse,createTransformer:createTransformer,getAnimatableNone:getAnimatableNone};const j=new Set(["brightness","contrast","saturate","opacity"]);function applyDefaultFilter(s){let[e,r]=s.slice(0,-1).split("(");if("drop-shadow"===e)return s;const[n]=r.match(t)||[];if(!n)return s;const a=r.replace(n,"");let o=j.has(e)?1:0;n!==r&&(o*=100);return e+"("+o+a+")"}const F=/([a-z-]*)\(.*?\)/g;const N=Object.assign(Object.assign({},O),{getAnimatableNone:t=>{const s=t.match(F);return s?s.map(applyDefaultFilter).join(" "):t}});export{n as alpha,d as color,O as complex,o as degrees,N as filter,b as hex,f as hsla,r as number,c as percent,u as progressPercentage,l as px,g as rgbUnit,h as rgba,a as scale,i as vh,p as vw};

